name: Deploy on Push to main
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Environment
        run: |
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub Organization: ${{ github.repository_owner }}"
          echo "GitHub Actor: ${{ github.actor }}"
          echo "Event Name: ${{ github.event_name }}"

      - name: Decode and save firebase.json
        run: |
          echo "${{ secrets.FIREBASE_CONFIG_B64 }}" | base64 -d > firebase.json
    

      - name: Check Secret Availability
        run: |
          echo "Checking if secrets are available..."
          if [ -n "${{ secrets.SSH_HOST }}" ]; then
            echo "✅ SSH_HOST is available"
            echo "HOST: ${{ secrets.SSH_HOST }}"
          else
            echo "❌ SSH_HOST is NOT available"
          fi
          
          if [ -n "${{ secrets.SSH_USERNAME }}" ]; then
            echo "✅ SSH_USERNAME is available"
            echo "USER: ${{ secrets.SSH_USERNAME }}"
          else
            echo "❌ SSH_USERNAME is NOT available"
          fi
          
          if [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "✅ SSH_PRIVATE_KEY is available"
            echo "KEY Length: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -l)"
          else
            echo "❌ SSH_PRIVATE_KEY is NOT available"
          fi
          
          if [ -n "${{ secrets.SSH_PASSPHRASE }}" ]; then
            echo "✅ SSH_PASSPHRASE is available"
          else
            echo "ℹ️ SSH_PASSPHRASE is not set (may be optional)"
          fi


      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            sudo /usr/bin/git --git-dir=/opt/projects/backend/backend-beribturing/.git \
            --work-tree=/opt/projects/backend/backend-beribturing pull && \
            sudo /usr/bin/docker compose -f /opt/projects/backend/backend-beribturing/docker-compose.yml up --build -d
